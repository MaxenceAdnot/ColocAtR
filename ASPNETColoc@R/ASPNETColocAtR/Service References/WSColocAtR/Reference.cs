//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASPNETColocAtR.WSColocAtR {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSAuthMessage", Namespace="http://schemas.datacontract.org/2004/07/WSColocAtR")]
    [System.SerializableAttribute()]
    public partial class WSAuthMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ASPNETColocAtR.WSColocAtR.StatusCode StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASPNETColocAtR.WSColocAtR.StatusCode StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusCode", Namespace="http://schemas.datacontract.org/2004/07/WSColocAtR")]
    public enum StatusCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessRefused = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSProfile", Namespace="http://schemas.datacontract.org/2004/07/WSColocAtR")]
    [System.SerializableAttribute()]
    public partial class WSProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int m2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string desc {
            get {
                return this.descField;
            }
            set {
                if ((object.ReferenceEquals(this.descField, value) != true)) {
                    this.descField = value;
                    this.RaisePropertyChanged("desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int m2 {
            get {
                return this.m2Field;
            }
            set {
                if ((this.m2Field.Equals(value) != true)) {
                    this.m2Field = value;
                    this.RaisePropertyChanged("m2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSColocAtR.IColocAtR")]
    public interface IColocAtR {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/CreateAccount", ReplyAction="http://tempuri.org/IColocAtR/CreateAccountResponse")]
        ASPNETColocAtR.WSColocAtR.WSAuthMessage CreateAccount(string login, string email, string password, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/CreateAccount", ReplyAction="http://tempuri.org/IColocAtR/CreateAccountResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> CreateAccountAsync(string login, string email, string password, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/SignIn", ReplyAction="http://tempuri.org/IColocAtR/SignInResponse")]
        ASPNETColocAtR.WSColocAtR.WSAuthMessage SignIn(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/SignIn", ReplyAction="http://tempuri.org/IColocAtR/SignInResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> SignInAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/SignOut", ReplyAction="http://tempuri.org/IColocAtR/SignOutResponse")]
        ASPNETColocAtR.WSColocAtR.WSAuthMessage SignOut(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/SignOut", ReplyAction="http://tempuri.org/IColocAtR/SignOutResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> SignOutAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/RefreshLastActivity", ReplyAction="http://tempuri.org/IColocAtR/RefreshLastActivityResponse")]
        ASPNETColocAtR.WSColocAtR.WSAuthMessage RefreshLastActivity(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/RefreshLastActivity", ReplyAction="http://tempuri.org/IColocAtR/RefreshLastActivityResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> RefreshLastActivityAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/Whoami", ReplyAction="http://tempuri.org/IColocAtR/WhoamiResponse")]
        ASPNETColocAtR.WSColocAtR.WSAuthMessage Whoami(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/Whoami", ReplyAction="http://tempuri.org/IColocAtR/WhoamiResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> WhoamiAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/ProfilWizard", ReplyAction="http://tempuri.org/IColocAtR/ProfilWizardResponse")]
        ASPNETColocAtR.WSColocAtR.WSAuthMessage ProfilWizard(string token, bool type, int age, int price, string city, string desc, int m2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/ProfilWizard", ReplyAction="http://tempuri.org/IColocAtR/ProfilWizardResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> ProfilWizardAsync(string token, bool type, int age, int price, string city, string desc, int m2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/ChangePassword", ReplyAction="http://tempuri.org/IColocAtR/ChangePasswordResponse")]
        ASPNETColocAtR.WSColocAtR.WSAuthMessage ChangePassword(string token, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/ChangePassword", ReplyAction="http://tempuri.org/IColocAtR/ChangePasswordResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> ChangePasswordAsync(string token, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/GetScoringResults", ReplyAction="http://tempuri.org/IColocAtR/GetScoringResultsResponse")]
        ASPNETColocAtR.WSColocAtR.WSProfile[] GetScoringResults(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/GetScoringResults", ReplyAction="http://tempuri.org/IColocAtR/GetScoringResultsResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSProfile[]> GetScoringResultsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/RetrieveProfileUN", ReplyAction="http://tempuri.org/IColocAtR/RetrieveProfileUNResponse")]
        ASPNETColocAtR.WSColocAtR.WSProfile RetrieveProfileUN(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/RetrieveProfileUN", ReplyAction="http://tempuri.org/IColocAtR/RetrieveProfileUNResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSProfile> RetrieveProfileUNAsync(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/RetrieveProfileUID", ReplyAction="http://tempuri.org/IColocAtR/RetrieveProfileUIDResponse")]
        ASPNETColocAtR.WSColocAtR.WSProfile RetrieveProfileUID(string token, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IColocAtR/RetrieveProfileUID", ReplyAction="http://tempuri.org/IColocAtR/RetrieveProfileUIDResponse")]
        System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSProfile> RetrieveProfileUIDAsync(string token, int userID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IColocAtRChannel : ASPNETColocAtR.WSColocAtR.IColocAtR, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ColocAtRClient : System.ServiceModel.ClientBase<ASPNETColocAtR.WSColocAtR.IColocAtR>, ASPNETColocAtR.WSColocAtR.IColocAtR {
        
        public ColocAtRClient() {
        }
        
        public ColocAtRClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ColocAtRClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ColocAtRClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ColocAtRClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ASPNETColocAtR.WSColocAtR.WSAuthMessage CreateAccount(string login, string email, string password, string firstName, string lastName) {
            return base.Channel.CreateAccount(login, email, password, firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> CreateAccountAsync(string login, string email, string password, string firstName, string lastName) {
            return base.Channel.CreateAccountAsync(login, email, password, firstName, lastName);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSAuthMessage SignIn(string email, string password) {
            return base.Channel.SignIn(email, password);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> SignInAsync(string email, string password) {
            return base.Channel.SignInAsync(email, password);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSAuthMessage SignOut(string token) {
            return base.Channel.SignOut(token);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> SignOutAsync(string token) {
            return base.Channel.SignOutAsync(token);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSAuthMessage RefreshLastActivity(string token) {
            return base.Channel.RefreshLastActivity(token);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> RefreshLastActivityAsync(string token) {
            return base.Channel.RefreshLastActivityAsync(token);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSAuthMessage Whoami(string token) {
            return base.Channel.Whoami(token);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> WhoamiAsync(string token) {
            return base.Channel.WhoamiAsync(token);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSAuthMessage ProfilWizard(string token, bool type, int age, int price, string city, string desc, int m2) {
            return base.Channel.ProfilWizard(token, type, age, price, city, desc, m2);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> ProfilWizardAsync(string token, bool type, int age, int price, string city, string desc, int m2) {
            return base.Channel.ProfilWizardAsync(token, type, age, price, city, desc, m2);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSAuthMessage ChangePassword(string token, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(token, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSAuthMessage> ChangePasswordAsync(string token, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(token, oldPassword, newPassword);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSProfile[] GetScoringResults(string token) {
            return base.Channel.GetScoringResults(token);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSProfile[]> GetScoringResultsAsync(string token) {
            return base.Channel.GetScoringResultsAsync(token);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSProfile RetrieveProfileUN(string token, string username) {
            return base.Channel.RetrieveProfileUN(token, username);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSProfile> RetrieveProfileUNAsync(string token, string username) {
            return base.Channel.RetrieveProfileUNAsync(token, username);
        }
        
        public ASPNETColocAtR.WSColocAtR.WSProfile RetrieveProfileUID(string token, int userID) {
            return base.Channel.RetrieveProfileUID(token, userID);
        }
        
        public System.Threading.Tasks.Task<ASPNETColocAtR.WSColocAtR.WSProfile> RetrieveProfileUIDAsync(string token, int userID) {
            return base.Channel.RetrieveProfileUIDAsync(token, userID);
        }
    }
}
